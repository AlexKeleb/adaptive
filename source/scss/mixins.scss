//псевдо распорка для флоатных блоков
@mixin clearfix() {
  &::after {
    display: table;
    content: "";
    clear: both;
  }
}

//абсолютный центровщик горизонтальный и вертикальный (позиционирование, вертикально, горизонтально)
@mixin center($position: absolute, $horizontal: true, $vertical: false) {
  @if $position {
    position: $position;
  }
  @if $vertical {
    top: 50%;
  }
  @if $horizontal {
    left: 50%;
  }
  @if $vertical and $horizontal {
    transform: translateX(-50%) translateY(-50%);
  } @else if $vertical {
    transform: translateY(-50%);
  } @else {
    transform: translateX(-50%);
  }
}

//основной контейнер страницы (ширина, внутренние горизонтальные отступы)
@mixin container($width, $padding-x: false) {
  margin: {
    left: auto;
    right: auto;
  }
  @if ($padding-x) {
    padding: {
      left: $padding-x;
      right: $padding-x;
    }
  }
  width: $width;
  box-sizing: border-box;
}

//параметры шрифта первичного (размер шрифта, высота строки, цвет, толщина шрифта, строчные или прописные)
@mixin font--first($size: false,  $lh: false, $color: false, $weight: false, $transform: false) {
  font-family: $font-family--first;
  @if $size {
    font-size: $size;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $color {
    color: $color;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $transform {
    text-transform: $transform;
  }
}

//параметры шрифта вторичного (размер шрифта, высота строки, цвет, толщина шрифта, строчные или прописные)
@mixin font--second($size: false,  $lh: false, $color: false, $weight: false, $transform: false) {
  font-family: $font-family--second;
  @if $size {
    font-size: $size;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $color {
    color: $color;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $transform {
    text-transform: $transform;
  }
}

//иконочный шрифт (код символа)
@mixin font--icon($content: false) {
  @if ($content) {
    content: '#{$content}';
  }
  font-family: $font-family--icon;
  font-weight: normal;
  line-height: 1em;
  text-align: center;
  text-transform: none;
  text-decoration: inherit;
  font-style: normal;
  font-variant: normal;
  speak: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

//ограничитель размера изображения
@mixin img-size() {
  max-width: 100%;
  height: auto;
}

//фон и размер retina изображений
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url($file-1x);
  @media only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx
  only screen and (min-resolution: 2dppx) { // Standardized
    background-image: url($file-2x);
    background-size: $width-1x $height-1x;
  }
}

//основные параметры псевдо элементов (контент, дисплэй, позиционирование)
@mixin pseudo($content: "", $display: block, $pos: absolute) {
  content: $content;
  display: $display;
  position: $pos;
}

//псевдо блок ::before (ширина, высота, контент, дисплэй, позиционирование)
@mixin pseudo-before($width, $height, $content: '', $display: block, $pos: absolute) {
  &::before {
    width: $width;
    height: $height;
    content: $content;
    display: $display;
    position: $pos;
  }
}

//псевдо блок ::after (ширина, высота, контент, дисплэй, позиционирование)
@mixin pseudo-after($width, $height, $content: '', $display: block, $pos: absolute) {
  &::after {
    width: $width;
    height: $height;
    content: $content;
    display: $display;
    position: $pos;
  }
}

//горизонтальная линия по краям текста (толщина, цвет)
@mixin hr($weight, $color) {
  @include pseudo-after(100%, $weight);
  position: relative;
  &::after {
    @include center(absolute, false, true);
    background: $color;
  }
}

//чекбокс внешняя рамка (ширина, высота, фон)
@mixin checkbox-out($width, $height, $background: false) {
  @include pseudo();
  width: $width;
  height: $height;
  @if ($background) {
    background: $background;
  }
}

//чекбокс середина (ширина, высота, толщина, цвет)
@mixin checkbox-in($width, $height, $border, $color) {
  @include pseudo();
  display: none;
  width: $width;
  height: $height;
  transform: rotate(-45deg);
  border: $border solid $color;
  border-top-color: transparent;
  border-right-color: transparent;
}

//крестик для закрытия попапов (ширина блока, высота блока, фон блока, форма блока, длинна палочек, толщина палочек, цвет палочек)
@mixin modal-close($Bwidth: 40px, $Bheight: 40px, $bg: transparent, $radius: false, $Xwidth: 26px, $Xheight: 6px, $Xcolor: red) {
  position: absolute;
  width: $Bwidth;
  height: $Bheight;
  border-radius: $radius;
  background: $bg;
  cursor: pointer;
  @include pseudo-before($Xwidth, $Xheight);
  @include pseudo-after($Xwidth, $Xheight);
  &::before,
  &::after {
    position: absolute;
    top: 50%;
    left: 50%;
    background: $Xcolor;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
  }
  &::after {
    transform: translateX(-50%) translateY(-50%) rotate(-45deg);
  }
}

//Треугольник (цвет, направление, размер, закругление краев, позиционирование)
@mixin triangle($color, $direction, $size: 6px, $round: false, $position: absolute) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: $round;
  }
  @if $direction == bottom {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == top {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

//граница контейнера в виде клина (цвет, ширина стороны угла, высота угла)
@mixin triangle-container($background, $direction, $width, $height) {
  position: relative;
  &::after {
    @include triangle($background, $direction, $height);
    @include center();
    bottom: -1 * $height;
    border-right-width: $width;
    border-left-width: $width;
    z-index: 2000;
  }
}

//граница контейнера в виде краев от клина (цвет, ширина стороны угла, высота угла)
@mixin triangle-container-edge($background, $direction, $width, $height) {
  position: relative;
  &::before {
    @include triangle(transparent, $direction, $height);
    @include center();
    top: -1 * $height + $height * 0.4;
    border-right: $width solid $background;
    border-left: $width solid $background;
    z-index: 2000;
  }
}

//Значек раскрывающегося меню (цвет полос, цвет полос при наведении, ширина значка, высота значка, толщина полос, количество полос )
@mixin hamburger(
  $color: black,
  $color-hover: red,
  $width: 20px,
  $height: 16px,
  $weight: 2px,
  $bars: 3
) {
  // box-shadow CSS output
  $shadow: ();
  $hover-shadow: ();
  
  // Spacing between bars is calculated based on the total height of the icon and the weight of each bar
  $spacing: ($height - ($weight * $bars)) / ($bars - 1);
  
  @if unit($spacing) == 'px' {
    $spacing: floor($spacing);
  }
  
  @for $i from 2 through $bars {
    $offset: ($weight + $spacing) * ($i - 1);
    $shadow: append($shadow, 0 $offset 0 $color, comma);
  }
  
  // Icon container
  position: relative;
  display: inline-block;
  vertical-align: middle;
  width: $width;
  height: $height;
  cursor: pointer;
  
  // Icon bars
  &::after {
    position: absolute;
    top: 0;
    left: 0;
    
    display: block;
    width: 100%;
    height: $weight;
    
    background: $color;
    box-shadow: $shadow;
    
    content: '';
  }
  
  // Hover state
  @if $color-hover {
    // Generate CSS
    @for $i from 2 through $bars {
      $offset: ($weight + $spacing) * ($i - 1);
      $hover-shadow: append($hover-shadow, 0 $offset 0 $color-hover, comma);
    }
    
    &:hover::after {
      background: $color-hover;
      box-shadow: $hover-shadow;
    }
  }
}

//градиент двухцветный горизонтальный (цвет начала, цвет конца, позиция начала, позиция конца)
@mixin gradient-x($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

//градиент двухцветный вертикальный (цвет начала, цвет конца, позиция начала, позиция конца)
@mixin gradient-y($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
  background-repeat: repeat-x;
}

@mixin gradient-x-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}

@mixin gradient-y-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}

@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}

@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

@mixin reset-text {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size or word-wrap.
  font-style: normal;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
}